name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      
      - uses: joschi/setup-jdk@v2
        with:
          java-version: '11' # The OpenJDK version to make available on the path
          architecture: 'x64' # defaults to 'x64'

      # - name: Install some stuff
      #   run: apt-get update && apt-get install -y wget gnupg

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg curl zsh wget build-essential gnupg fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1

      # - name: Install dependencies
      #   run: |
      #     apt-get update && apt-get install -y gnupg curl zsh wget build-essential gnupg fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1

      - name: Install Google Chrome
        run: |
          sudo wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-unstable

      # - name: Install Google Chrome
      #   run: |
      #     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
      #     sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
      #     apt-get update
      #     apt-get install -y google-chrome-unstable

      - name: Install MARP
        run: |
          npm install -g @marp-team/marp-cli

      - name: Build artifacts
        run: |
          make

      - name: Decrypt GDrive token
        env:
          GTOKEN_PASS: ${{ secrets.CI_GDRIVE_TOKEN_PASSPHRASE }}
        run: |
          mkdir -p ~/.gdrive
          gpg --quiet --batch --yes --decrypt --passphrase="q1w2e3r4" --output ~/.gdrive/token_v2.json .github/workflows/token_v2.json.gpg
      
      - name: GDrive token file list
        run: cat ~/.gdrive/token_v2.json

      - name: Install GDrive
        env:
          GTOKEN_PASS: ${{ secrets.CI_GDRIVE_TOKEN_PASSPHRASE }}
        run: |
          wget https://github.com/prasmussen/gdrive/releases/download/2.1.1/gdrive_2.1.1_linux_386.tar.gz
          tar xzvf gdrive_2.1.1_linux_386.tar.gz
          chmod +x gdrive
          mv gdrive /usr/local/bin/gdrive
      
      - name: Deploy to GDrive
        run: |
          # gdrive list

          # Getting parent dir for all artifacts
          export TARGET_PARENT_FOLDER=`gdrive list --query "name contains '!cansat2021'" --no-header --max 0 | cut -d" " -f1 -`
          # echo "Target parent folder:" $TARGET_PARENT_FOLDER

          # Remove all PDF artifacts
          gdrive list --query "name contains 'can2021_pdf'" --no-header --max 0 | cut -d" " -f1 - | xargs -L 1 gdrive delete -r

          # Remove all ZIP artifacts
          gdrive list --query "name contains 'can2021_zip'" --no-header --max 0 | cut -d" " -f1 - | xargs -L 1 gdrive delete -r

          # Creates directory for PDF artifacts
          export TARGET_PDF_PARENT_FOLDER=`gdrive mkdir --parent $TARGET_PARENT_FOLDER can2021_pdf | cut -d" " -f2 -`
          # echo "Target parent PDF folder:" $TARGET_PDF_PARENT_FOLDER

          # Now, upload presentations          
          gdrive upload --parent $TARGET_PDF_PARENT_FOLDER drones-101/dist/drones-101/drones-101.pdf
          gdrive upload --parent $TARGET_PDF_PARENT_FOLDER firedetection-101/lecture/dist/firedetection-101/firedetection-101.pdf
          gdrive upload --parent $TARGET_PDF_PARENT_FOLDER platformio-101/lecture/dist/platformio-101/platformio-101.pdf

          # Creates directory for PDF artifacts
          export TARGET_ZIP_PARENT_FOLDER=`gdrive mkdir --parent $TARGET_PARENT_FOLDER can2021_zip | cut -d" " -f2 -`
          # echo "Target parent ZIP folder:" $TARGET_ZIP_PARENT_FOLDER

          # Now upload archives
          gdrive upload --parent $TARGET_ZIP_PARENT_FOLDER firedetection-101/dist/firedetector-final.zip
